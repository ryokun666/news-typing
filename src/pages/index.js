// 必要なモジュールとコンポーネントをインポート
import Head from "next/head";
import { useState, useEffect } from "react";
import styles from "@/styles/Home.module.css";
import Link from "next/link";
import useSWR from "swr";
import { useUser } from "@/contexts/UserContext";

// Homeコンポーネントをエクスポート
export default function Home() {
  // ユーザーコンテキストからusernameとsetUsernameを取得
  const { username, setUsername } = useUser();

  // ユーザーがフォームに入力した名前をローカルステートに保存
  const [localUsername, setLocalUsername] = useState("");

  // SWRを使って/api/userからデータをフェッチ
  const { data } = useSWR("/api/user", (url) =>
    fetch(url).then((res) => res.json())
  );

  // データがフェッチされたらusernameをセット
  useEffect(() => {
    if (data && !username) {
      setUsername(data.username);
    }
  }, [data]);

  // ユーザーがフォームを送信したときのハンドラー
  const handleSubmit = async (event) => {
    // デフォルトのフォーム送信を防止
    event.preventDefault();

    // /api/loginにPOSTリクエストを送信してログインを試みる
    const response = await fetch("/api/login", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ username: localUsername }),
    });

    // ログインに成功した場合はユーザー名をセット
    if (response.ok) {
      setUsername(localUsername);
      console.log("Logged in");
    } else {
      console.log("Failed to log in");
    }
  };


  // レンダリングするJSX
  return (
    <>
      {/* HTMLヘッドを設定 */}
      <Head>
        <title>ニュースタイピング</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* メインコンテンツ */}
      <main className={styles.main}>
        {/* ユーザー名を入力して登録するフォーム */}
        <div>ユーザ名を登録しよう！</div>
        {!username && (
          <form onSubmit={handleSubmit}>
            <input
              type="text"
              value={localUsername}
              onChange={(e) => setLocalUsername(e.target.value)}
              placeholder="ユーザ名"
            />
            <button type="submit">登録</button>
          </form>
        )}

        {/* ユーザー名がある場合に表示 */}
        {username && (
          <>
            <div>{username}さんだね！</div>
            <button>
              <Link href="./easy">はい</Link>
            </button>
            <button onClick={()=>setUsername(null)}>いいえ</button>
          </>
        )}

        {/* 各モードへのリンク */}
        {/* <div>
          <Link href="./easy">かんたんモード</Link>
        </div>
        <div>
          <Link href="./normal">ふつうモード</Link>
        </div>
        <div>
          <Link href="./hard">むずかしいモード</Link>
        </div> */}
      </main>
    </>
  );
}
